# Sorteamos - Criando um novo Secret

## Passo a Passo

Para publicarmos nossos secrets no repositorio git precisamos utilizar a ferramenta Sealed Secret para gerar secrets criptografados.

1. Criação do arquivo de secret comum
Primeiro precisamos criar um arquivo de secret comum com os valores convertidos para base 64. Apenas compo exemplo todos os valores são test1234

``` yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: sorteamos-secret
  namespace: sorteamos-staging
data:
  APP_KEY: dGVzdDEyMzQK
  ASAAS_API_KEY: dGVzdDEyMzQK
  AWS_ACCESS_KEY_ID: dGVzdDEyMzQK
  AWS_SECRET_ACCESS_KEY: dGVzdDEyMzQK
  DB_PASSWORD: dGVzdDEyMzQK
  DB_USERNAME: dGVzdDEyMzQK
  DIGITALOCEAN_SPACES_KEY: dGVzdDEyMzQK
  DIGITALOCEAN_SPACES_SECRET: dGVzdDEyMzQK
  GUPSHUP_PASSWORD: dGVzdDEyMzQK
  MAIL_PASSWORD: dGVzdDEyMzQK
  MIX_PUSHER_APP_KEY: dGVzdDEyMzQK
  PUSHER_APP_KEY: dGVzdDEyMzQK
  PUSHER_APP_SECRET: dGVzdDEyMzQK
  REDIS_PASSWORD: dGVzdDEyMzQK
  VAPID_PRIVATE_KEY: dGVzdDEyMzQK
  VAPID_PUBLIC_KEY: dGVzdDEyMzQK
  ZAPI_TOKEN: dGVzdDEyMzQK
```

2. Criação do arquivo sealed-secret
Efetue a criação do sealed secret como o comando abaixo.
```bash
cat secret-raw.yaml | kubeseal \
    --controller-namespace kube-system \
    --controller-name sealed-secrets-controller \
    --format yaml \
    > sorteamos-sealed-secret.yaml
```

3. Copie o arquivo para a pasta de configuracao da aplicacão. Utilizando como exemplo o sorteamos de staging o caminho seria.
``` bash
k8s/applications/sorteamos-staging
```

4. Verifique se o arquivo kustomization.yaml do overlay está referenciado o novo secret criado.
``` yaml
resources:
  - sorteamos-sealed-secret.yaml
```

5. Envie o novo arquivo do sealed secret para o repositorio git.
